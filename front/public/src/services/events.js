var angular2_1 = require('angular2/angular2');
var LoggedIn = (function () {
    function LoggedIn() {
        this.emitter = new angular2_1.EventEmitter();
    }
    LoggedIn.prototype.listen = function (callback) {
        console.log(this.emitter);
        this.emitter.observer({ next: function (data) {
                callback(data);
            }
        });
    };
    LoggedIn.prototype.emit = function (data) {
        if (data === void 0) { data = ""; }
        this.emitter.next(data);
    };
    return LoggedIn;
})();
exports.LoggedIn = LoggedIn;
var injector = angular2_1.Injector.resolveAndCreate([
    angular2_1.bind(LoggedIn).toFactory(function () {
        return new LoggedIn();
    })
]);
var Factory = (function () {
    function Factory() {
    }
    Factory.build = function (className) {
        console.log(className);
        return injector.get(className);
    };
    return Factory;
})();
exports.Factory = Factory;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2aWNlcy9ldmVudHMudHMiXSwibmFtZXMiOlsiTG9nZ2VkSW4iLCJMb2dnZWRJbi5jb25zdHJ1Y3RvciIsIkxvZ2dlZEluLmxpc3RlbiIsIkxvZ2dlZEluLmVtaXQiLCJGYWN0b3J5IiwiRmFjdG9yeS5jb25zdHJ1Y3RvciIsIkZhY3RvcnkuYnVpbGQiXSwibWFwcGluZ3MiOiJBQUFBLHlCQUEyQyxtQkFBbUIsQ0FBQyxDQUFBO0FBTS9EO0lBQUFBO1FBQ0NDLFlBQU9BLEdBQUdBLElBQUlBLHVCQUFZQSxFQUFFQSxDQUFDQTtJQWE5QkEsQ0FBQ0E7SUFYQUQseUJBQU1BLEdBQU5BLFVBQU9BLFFBQW1CQTtRQUN6QkUsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7UUFDMUJBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLFFBQVFBLENBQUNBLEVBQUNBLElBQUlBLEVBQUVBLFVBQUNBLElBQUlBO2dCQUNoQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDaEJBLENBQUNBO1NBQ0RBLENBQUNBLENBQUNBO0lBQ0pBLENBQUNBO0lBRURGLHVCQUFJQSxHQUFKQSxVQUFLQSxJQUFlQTtRQUFmRyxvQkFBZUEsR0FBZkEsU0FBZUE7UUFDbkJBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO0lBQ3pCQSxDQUFDQTtJQUNGSCxlQUFDQTtBQUFEQSxDQWRBLElBY0M7QUFkWSxnQkFBUSxXQWNwQixDQUFBO0FBRUQsSUFBSSxRQUFRLEdBQUcsbUJBQVEsQ0FBQyxnQkFBZ0IsQ0FBQztJQUN4QyxlQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxJQUFJLFFBQVEsRUFBRSxDQUFDO0lBQ3ZCLENBQUMsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUtIO0lBQUFJO0lBTUFDLENBQUNBO0lBSk9ELGFBQUtBLEdBQVpBLFVBQWFBLFNBQVNBO1FBQ3JCRSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFBQTtRQUN0QkEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7SUFDaENBLENBQUNBO0lBQ0ZGLGNBQUNBO0FBQURBLENBTkEsSUFNQztBQU5ZLGVBQU8sVUFNbkIsQ0FBQSIsImZpbGUiOiJzcmMvc2VydmljZXMvZXZlbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFdmVudEVtaXR0ZXIsIEluamVjdG9yLCBiaW5kfSBmcm9tICdhbmd1bGFyMi9hbmd1bGFyMic7XG5cbmludGVyZmFjZSBFdmVudCB7XG4gIGVtaXR0ZXI6IEV2ZW50RW1pdHRlcjtcbn1cblxuZXhwb3J0IGNsYXNzIExvZ2dlZEluIGltcGxlbWVudHMgRXZlbnR7IFxuXHRlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXHRcblx0bGlzdGVuKGNhbGxiYWNrIDogRnVuY3Rpb24pe1xuXHRcdGNvbnNvbGUubG9nKHRoaXMuZW1pdHRlcik7XG5cdFx0dGhpcy5lbWl0dGVyLm9ic2VydmVyKHtuZXh0OiAoZGF0YSkgPT4ge1xuXHRcdFx0XHRjYWxsYmFjayhkYXRhKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXHRcblx0ZW1pdChkYXRhIDogQW55ID0gXCJcIil7XG5cdFx0dGhpcy5lbWl0dGVyLm5leHQoZGF0YSk7XG5cdH1cbn1cblxudmFyIGluamVjdG9yID0gSW5qZWN0b3IucmVzb2x2ZUFuZENyZWF0ZShbXG5cdGJpbmQoTG9nZ2VkSW4pLnRvRmFjdG9yeSgoKSA9PiB7IFxuXHRcdHJldHVybiBuZXcgTG9nZ2VkSW4oKTtcblx0fSlcdFx0XG5dKTtcblxuLyoqXG4gKiBOb3Qgc3VyZSBpZiB0aGlzIGlzIGdlbmlvdXMgb3Igc3R1cGlkIVxuICovXG5leHBvcnQgY2xhc3MgRmFjdG9yeXtcblx0XG5cdHN0YXRpYyBidWlsZChjbGFzc05hbWUpe1xuXHRcdGNvbnNvbGUubG9nKGNsYXNzTmFtZSlcblx0XHRyZXR1cm4gaW5qZWN0b3IuZ2V0KGNsYXNzTmFtZSk7XG5cdH1cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=