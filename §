elgg.provide('minds.live');

minds.live.init = function() {
	
	var user = elgg.get_logged_in_user_entity();

	if(user){

	//load active chats on page loads
	var activeChats = JSON.parse(sessionStorage.getItem('activeChats'));
	if(activeChats){
		var length = activeChats.length;
                for (var i = 0; i < length; i++) {		
			minds.live.openChatWindow(activeChats[i],  $('.minds-live-chat-userlist').find('li#' + activeChats[i] + ' h3').text(), '', true);
		}
	}

	var guid = new String(user.guid);

	$(document).on('keydown', '.minds-live-chat-userlist li input', function(e){ 
		parent = $(this).parents('li');
		if(e.which == 13){
			portal.find().send("message", {to_guid: parent.attr('id'), message: $(this).val(), from_name:user.name });  
			parent.removeClass('active');
			$(this).val('');
		}
	});

	$(document).on('click','.minds-live-chat-userlist li h3', function (e) {
		toggles = $(this).parent();
		userlist = $(this).parents('userlist');
		if(userlist && toggles.hasClass('user')){
			box = $('.minds-live-chat-userlist').find('li.box#' + toggles.attr('id'));
                        if(box.length == 0){
				minds.live.openChatWindow(toggles.attr('id'), $(this).text(), '');
			} else {
				box.addClass('toggled');
			}
		} else {
			if(toggles.hasClass('toggled')){
				toggles.removeClass('toggled');
			} else {
				toggles.addClass('toggled');
				$(this).parent().find('input').focus();
				//$(this).parent().find('messages').animate({ scrollTop:  $(this).parent().find('messages')[0].scrollHeight},1000);
			}
		}	
	});

	$(document).on('click', '.minds-live-chat-userlist li .del', function (e) {
		
	});

	portal.open("http://108.82.235.132:8080/chat", {
		sharing:true
	}).on({
                        open: function() {
                                console.log("The connection has been opened");
			},
                        close: function(reason) {
                        //         console.log("The connection has been closed due to '" + reason + "'");
                     //            $(input).attr("disabled", "disabled");
                           },
			connect: function(){
					console.log('you are connected?');
			},
                        message: function(data) {
				if(data.from_guid == elgg.get_logged_in_user_guid()){
					box = $('.minds-live-chat-userlist').find('li.box#' + data.to_guid);
					var from = "You: ";
					minds.live.saveCacheChat(data.to_guid, from + data.message);
				} else {
					//play sound
                                 	document.getElementById('sound').play();
					box = $('.minds-live-chat-userlist').find('li.box#' + data.from_guid);
					if(box.length == 0){
						minds.live.openChatWindow(data.from_guid, data.from_name, data.message);
					return true;	
					}
					box.addClass('active');
					var from = box.find('h3').text() + ": ";
					minds.live.saveCacheChat(data.from_guid, from + data.message);
				}
				box.find('.messages').append('<span class="message">' + from + data.message + '</span>')
					.animate({ scrollTop: box.find('.messages')[0].scrollHeight},1000);
			
				//cache in a cookie so new page loads see it
			},
                         waiting: function(delay, attempts) {
                                   console.log("The socket will try to reconnect after " + delay + " ms");
                                   notify("The total number of reconnection attempts is " + attempts);
                          },
                         heartbeat: function() {
                                  console.log("The server's heart beats");
                          }
                });
		
	}
}

minds.live.openChatWindow = function(id,name,message, minimised){
	var cache = minds.live.getCacheChat(id);
	if(cache){
		var length = cache.length;
		var newmsg = '';
		for (var i = 0; i < length; i++) {
			newmsg	+= '<span class="message">' + cache[i] + '</span>';
		}
	}
			
	if(message){
		message = '<span class="message">' +name + ': ' + message + '</span>';
	}
	message = newmsg + message;
	if(minimised){
		var liclass = 'toggle';
	} else {
		var liclass = 'toggled';
	}
	var box = '<li class="box '+ liclass + '" id="' + id + '">' +
       			 '<h3>' + name + '</h3>' + '<span class="del entypo">&#10062;</span>' +
       			 '<div class="messages">' + message +  '</div>' + 
        		 '<div> <input type="text" class="elgg-input" /> </div>' +
		'</li>';	
	$('.minds-live-chat-userlist > ul').append(box).find('input').focus();
}

minds.live.getCacheChat = function(id){
	var key = 'chat.'+id;
	return JSON.parse(sessionStorage.getItem(key));
}
minds.live.saveCacheChat = function(id, message){
	var key = 'chat.'+id;
	var chatSession = JSON.parse(sessionStorage.getItem(key));
	if(!chatSession){
		chatSession = new Array();
	}
	chatSession.push(message);
	sessionStorage.setItem(key, JSON.stringify(chatSession));

	//add key to list of active chats
	var activeChats = JSON.parse(sessionStorage.getItem('activeChats'));
	if(!activeChats){
		activeChats = new Array();
	}
	if($.inArray(id, activeChats)){
		activeChats.push(id);
	}
	sessionStorage.setItem('activeChats', JSON.stringify(activeChats));
}
minds.live.removeCacheChat = function(id){
	 var key = 'chat.'+id;
	var activeChats = JSON.parse(sessionStorage.getItem('activeChats'));
        if(!activeChats){
                activeChats = new Array();
        }
        if($.inArray(id, activeChats)){
                activeChats.splice(id, 1);
        }
	sessionStorage.setItem('activeChats', JSON.stringify(activeChats));
}
elgg.register_hook_handler('init', 'system', minds.live.init);

