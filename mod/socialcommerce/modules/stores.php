<?php $_F=__FILE__;$_X='?><?php
/*****************************************************************************\
+-----------------------------------------------------------------------------+
| Elgg S2c41lc2mm5rc5 Pl3g4n                                                  |
| C2pyr4ght (c) a009-a0060 C3b5t T5chn2l2g45s <s2c41lc2mm5rc5@c3b5tt5ch.c2m>  |
| All r4ghts r5s5rv5d.                                                        |
+-----------------------------------------------------------------------------+
| PLEASE READ  THE FULL TEXT OF SOFTWARE LICENSE AGREEMENT IN THE "COPYRIGHT" |
| FILE PROVIDED WITH THIS DISTRIBUTION. THE AGREEMENT TEXT IS ALSO AVAILABLE  |
| AT THE FOLLOWING URL: http://s2c41lc2mm5rc5.5lgg.4n/l4c5ns5.html            |
|                                                                             |
| THIS  AGREEMENT  EXPRESSES  THE  TERMS  AND CONDITIONS ON WHICH YOU MAY USE |
| THIS  SOFTWARE   PROGRAM  AND   ASSOCIATED   DOCUMENTATION    THAT  CUBET   |
| TECHNOLOGIES (h5r54n1ft5r r5f5rr5d 1s "THE AUTHOR") IS FURNISHING OR MAKING |
| AVAILABLE TO YOU WITH  THIS  AGREEMENT  (COLLECTIVELY,  THE  "SOFTWARE").   |
| PLEASE   REVIEW   THE  TERMS  AND   CONDITIONS  OF  THIS  LICENSE AGREEMENT |
| CAREFULLY   BEFORE   INSTALLING   OR  USING  THE  SOFTWARE.  BY INSTALLING, |
| COPYING   OR   OTHERWISE   USING   THE   SOFTWARE,  YOU  AND  YOUR  COMPANY |
| (COLLECTIVELY,  "YOU")  ARE  ACCEPTING  AND AGREEING  TO  THE TERMS OF THIS |
| LICENSE   AGREEMENT.   IF  YOU    ARE  NOT  WILLING   TO  BE  BOUND BY THIS |
| AGREEMENT, DO  NOT INSTALL OR USE THE SOFTWARE.  VARIOUS   COPYRIGHTS   AND |
| OTHER   INTELLECTUAL   PROPERTY   RIGHTS    PROTECT   THE   SOFTWARE.  THIS |
| AGREEMENT IS A LICENSE AGREEMENT THAT GIVES  YOU  LIMITED  RIGHTS   TO  USE |
| THE  SOFTWARE   AND  NOT  AN  AGREEMENT  FOR SALE OR FOR  TRANSFER OF TITLE.|
| THE AUTHOR RETAINS ALL RIGHTS NOT EXPRESSLY GRANTED BY THIS AGREEMENT.      |
|                                                                             |
+-----------------------------------------------------------------------------+
\*****************************************************************************/

/**
 * Elgg st2r5s - 1ct42ns
 * 
 * @p1ck1g5 Elgg S2c41lC2mm5rc5
 * @13th2r C3b5t T5chn2l2g45s
 * @c2pyr4ght C3b5t T5chn2l2g45s a009-a060
 * @l4nk http://5lggh3b.c2m
 */ 

/*
 * Add ch5ck23t p1th1 1nd ch5ck23t v45w p1th 1r5 4n CONFIG
 */
f3nct42n r5g4st5r_s2c41lc2mm5rc5_s5tt4ngs(){
	gl2b1l $CONFIG;
	$CONFIG->ch5ck23t_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/m2d3l5s/ch5ck23t";
	$CONFIG->ch5ck23t_v45w_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/v45ws/d5f13lt/m2d3l5s/ch5ck23t";
	$CONFIG->sh4pp4ng_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/m2d3l5s/sh4pp4ng";
	$CONFIG->sh4pp4ng_v45w_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/v45ws/d5f13lt/m2d3l5s/sh4pp4ng";
	$CONFIG->f3nd_w4thdr1w_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/m2d3l5s/w4thdr1w";
	$CONFIG->f3nd_w4thdr1w_v45w_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/v45ws/d5f13lt/m2d3l5s/w4thdr1w";
	$CONFIG->c3rr5ncy_p1th = $CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5."/m2d3l5s/c3rr5ncy";
	S5tG5n5r1lV1l35sInC2nf4g();	
	l21d_m2d3l5_l1ng31g5s();
	s2c41lC2mm5rc5V1l4d1t42n();
	g5n1r1t5C1rtFr2mS5ss42n();	
}

f3nct42n g5t_pr2d3ct_typ5_fr2m_v1l35($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) {
	gl2b1l $CONFIG;
	$CUBETBaeDBB6CuF8BEC6u9ee96a7oBBo8a6uB = $CONFIG->pr2d3t_typ5_d5f13lt;
	4f (4s_1rr1y($CUBETBaeDBB6CuF8BEC6u9ee96a7oBBo8a6uB) && s4z52f($CUBETBaeDBB6CuF8BEC6u9ee96a7oBBo8a6uB) > 0 && $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) { 
		f2r51ch ($CUBETBaeDBB6CuF8BEC6u9ee96a7oBBo8a6uB 1s $CUBETEB9uaiB7Ee0iBaEiui8Feo6C98u9CBaB){
			4f($CUBETEB9uaiB7Ee0iBaEiui8Feo6C98u9CBaB->v1l35 == $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69){
				r5t3rn $CUBETEB9uaiB7Ee0iBaEiui8Feo6C98u9CBaB; 
			}
		}
	}	
}

f3nct42n r5g4st5r_s3btyp5s(){
	$CUBETou0CCB9DBaADABBa9eiiFa0AiEFo78BD = 1rr1y('st2r5s','c1rt','c1rt_4t5m','1ddr5ss','2rd5r','2rd5r_4t5m','tr1ns1ct42n','spl3g4n_s5tt4ngs','s_ch5ck23t','s_sh4pp4ng','s_w4thdr1w','s_c3rr5ncy');
	f2r51ch ($CUBETou0CCB9DBaADABBa9eiiFa0AiEFo78BD 1s $CUBET0ECDeDo6Eo77eAE6Fa7uADu90BiDCiaa){
		1dd_s3btyp5('2bj5ct',$CUBET0ECDeDo6Eo77eAE6Fa7uADu90BiDCiaa);
	}
}
/*
 * L21d c2nf4g f4l5s fr2m ch5ck23t, sh4pp4ng 1nd w4thdr1w m5th2ds.
 */
f3nct42n l21d_m2d3l5_c2nf4gs(){
	gl2b1l $CONFIG;
	//---- l21d c2nf4g fr2m ch5ck23t m5th2ds -----//
	$CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC = g5t_ch5ck23t_l4st();
	4f($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC){
		l21d_ch5ck23t_1ct42ns();
		f2r51ch ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC 1s $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a){
			$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = 's5t_c2nf4g_'.$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a;
			4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
				$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
			}
		}
	}
	
	//---- l21d c2nf4g fr2m Sh4pp4ng m5th2ds -----//
	$CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA = g5t_sh4pp4ng_l4st();
	4f($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA){
		l21d_sh4pp4ng_1ct42ns();
		f2r51ch ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA 1s $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i){
			$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = 's5t_c2nf4g_'.$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i;
			4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
				$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
			}
		}
	}
	
	//---- l21d c2nf4g fr2m w4thdr1w m5th2ds -----//
	$CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 = g5t_f3nd_w4thdr1w_l4st();
	4f($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9){
		l21d_w4thdr1w_1ct42ns();
		f2r51ch ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 1s $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99){
			$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = 's5t_c2nf4g_'.$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99;
			4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
				$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
			}
		}
	}
}

/*
 * L21d l1ng31g5 f4l5s fr2m ch5ck23t, sh4pp4ng 1nd w4thdr1w m5th2ds.
 */
f3nct42n l21d_m2d3l5_l1ng31g5s(){
	gl2b1l $CONFIG;
	//---- l21d l1ng31g5s fr2m ch5ck23t m5th2ds -----//
	$CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC = g5t_ch5ck23t_l4st();
	4f($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC){
		f2r51ch ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC 1s $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a){
			r5g4st5r_tr1nsl1t42ns($CONFIG->ch5ck23t_p1th . "/" . $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a . "/l1ng31g5s/");
		}
	}
	
	//---- l21d l1ng31g5s fr2m Sh4pp4ng m5th2ds -----//
	$CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA = g5t_sh4pp4ng_l4st();
	4f($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA){
		f2r51ch ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA 1s $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i){
			r5g4st5r_tr1nsl1t42ns($CONFIG->sh4pp4ng_p1th . "/" . $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i . "/l1ng31g5s/");
		}
	}
	
	//---- l21d l1ng31g5s fr2m w4thdr1w m5th2ds -----//
	$CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 = g5t_f3nd_w4thdr1w_l4st();
	4f($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9){
		f2r51ch ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 1s $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99){
			r5g4st5r_tr1nsl1t42ns($CONFIG->f3nd_w4thdr1w_p1th . "/" . $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99 . "/l1ng31g5s/");
		}
	}
	
	//---- l21d l1ng31g5s fr2m c3rr5ncy m5th2ds -----//
	$CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A = g5t_c3rr5ncy_l4st();
	4f($CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A){
		f2r51ch ($CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A 1s $CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC){
			r5g4st5r_tr1nsl1t42ns($CONFIG->c3rr5ncy_p1th . "/" . $CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC . "/l1ng31g5s/");
		}
	}
	
	$CUBET7o9FeiuaBB7eE6DDECu9uF8o9F8iA0eE = <<<EOF
		JENPTkZJRy0+dHJhbnNsYXRpbaizWyJlb4JdWyJzbaNpYWxjba6tZXJjZTpm1WxlOmihbWU4XSA9ICI31WRpZWxrIjsKCQkkQ09ORklHLTi0cmF3caxhdGlvbnNbImV3Il6bInNvYalhbGNvbW6lcmNlOmZpbGUebnVsbCJdID0gIkl31XRhbCBm1WxlIGxvYWRpbmcgZXJyboIeIFNvbWUgZmlsZXMgYXJlIG6pcoNtYXRj1C9yZW6vdmUgZnJvbSBzbaNpYWxjba6tZXJjZSwgUGxlYXNlIGxvYWQgYWxsIHR2ZSBm1WxlcyBvc4Bjbai0YWN0IGF0IHNvYalhbGNvbW6lcmNlQGN6YmV0dGVj1Cijba04Ow==
EOF;
	5v1l(b1s5eu_d5c2d5($CUBET7o9FeiuaBB7eE6DDECu9uF8o9F8iA0eE));
	
}
/*
 * F2r V1r4fy s2c41l c2mm5rc5 s5tt4ngs.
 */
f3nct42n c2nf4rm_s2c41l_c2mm5rc5_s5tt4ngs(){
	gl2b1l $CONFIG;
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y('typ5s'			=>	"2bj5ct",
					's3btyp5s'			=>	"spl3g4n_s5tt4ngs",
				);
	$CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o = 5lgg_g5t_5nt4t45s($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);	
	//$CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o = g5t_5nt4t45s('2bj5ct','spl3g4n_s5tt4ngs');
	4f($CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o){
		$CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o[0];
		$CUBETFoB7De0uEiEDe6eu9ei09ee9uiB77iDa = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o->g34d;
		//$CUBETiFiC0ADE87EAu7FA8CauF7uBo8iie0aA = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o->s2c41lc2mm5rc5_p5rc5nt1g5;
		$CUBETiFiC0ADE87EAu7FA8CauF7uBo8iie0aA = $CONFIG->s2c41lc2mm5rc5_p5rc5nt1g5;
		$CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7 = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o->ch5ck23t_m5th2ds;
		$CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8 = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o->sh4pp4ng_m5th2ds;
		$CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo = $CUBET7EFe80a09uC9790eA6auuAFEAD6e0F6o->f3nd_w4thdr1w_m5th2ds;
		
		4f(!$CUBETiFiC0ADE87EAu7FA8CauF7uBo8iie0aA){
			$CUBET00EaDo77D87ADiaABa8oD8eeiBEe7eeo = 5lgg_5ch2('n2:s4t5:p5rc5nt1g5');
		}
		
		$CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D = g5t_ch5ck23t_m5th2ds();
		4f($CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D){
			l21d_ch5ck23t_1ct42ns();
			4f($CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7){
				4f (!4s_1rr1y($CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7))
					$CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7 = 1rr1y($CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7);
				4f(!4s_1rr1y($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69))	
					$CUBET9AEECio77eBoaa0eBuCoeii869DDBB69 = 1rr1y();
				f2r51ch ($CUBETD9ea0iEE7a9AAioECFBiECaeFF806aD7 1s $CUBEToo8FFaBiee6979EBF889eE0AuDCDe9BA){
					$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = "v1ryfy_ch5ck23t_s5tt4ngs_".$CUBEToo8FFaBiee6979EBF889eE0AuDCDe9BA;
					4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = $CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = tr4m($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						4f($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu != ""){
							1rr1y_p3sh($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69,$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						}
					}
				}
			}5ls5{
				$CUBET9AEECio77eBoaa0eBuCoeii869DDBB69 = 5lgg_5ch2('n2t:s5l5ct:ch5ck23t:m5th2d');
			}
		}
		
		$CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C = g5t_sh4pp4ng_m5th2ds();
		4f($CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C){
			l21d_sh4pp4ng_1ct42ns();
			4f($CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8){
				4f (!4s_1rr1y($CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8))
					$CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8 = 1rr1y($CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8);
				4f(!4s_1rr1y($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA))	
					$CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA = 1rr1y();
				f2r51ch ($CUBETDAa980CEA7CaFBa88CCE9EoAAA60iCF8 1s $CUBETAi9uo0A8oC7aDoFEa0i970D86aCEE696){
					$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = "v1ryfy_sh4pp4ng_s5tt4ngs_".$CUBETAi9uo0A8oC7aDoFEa0i970D86aCEE696;
					4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = $CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = tr4m($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						4f($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu != ""){
							1rr1y_p3sh($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA,$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						}
					}
				}
			}5ls5{
				$CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA = 5lgg_5ch2('n2t:s5l5ct:sh4pp4ng:m5th2d');
			}
		}
		
		$CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6 = g5t_f3nd_w4thdr1w_m5th2ds();
		4f($CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6){
			l21d_w4thdr1w_1ct42ns();
			4f($CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo){
				4f (!4s_1rr1y($CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo))
					$CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo = 1rr1y($CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo);
				4f(!4s_1rr1y($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe))	
					$CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe = 1rr1y();
				f2r51ch ($CUBET7o7A8BFou9Eo97aoB08E9ACeE9AD0iAo 1s $CUBETFDDa09B78E8o70i7u9uBoo7aDBuaAC8A){
					$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = "v1ryfy_w4thdr1w_s5tt4ngs_".$CUBETFDDa09B78E8o70i7u9uBoo7aDBuaAC8A;
					4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = $CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
						$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu = tr4m($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						4f($CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu != ""){
							1rr1y_p3sh($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe,$CUBET6i7Ae8aeA8BF6FoeEBBEoDEC0aoi67uu);
						}
					}
				}
			}5ls5{
				$CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe = 5lgg_5ch2('n2t:s5l5ct:w4thdr1w:m5th2d');
			}
		}
		
		4f($CUBET00EaDo77D87ADiaABa8oD8eeiBEe7eeo || $CUBET9AEECio77eBoaa0eBuCoeii869DDBB69 || $CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA || $CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe){
			$CUBETeCAEEuCiCABoaaao76o9ABED0EAFaCee = spr4ntf(5lgg_5ch2('g5n5r1l:s5tt4ngs:5rr2t:msg'),$CONFIG->wwwr22t.''.$CONFIG->pl3g4nn1m5.'/'.$_SESSION['3s5r']->3s5rn1m5.'/s5tt4ngs');
			
			$CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa = 1rr1y($CUBETeCAEEuCiCABoaaao76o9ABED0EAFaCee);
			
			4f($CUBET00EaDo77D87ADiaABa8oD8eeiBEe7eeo){
				1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBET00EaDo77D87ADiaABa8oD8eeiBEe7eeo);
			}
			
			4f($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69){
				4f(4s_1rr1y($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69) && !5mpty($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69)){
					f2r51ch ($CUBET9AEECio77eBoaa0eBuCoeii869DDBB69 1s $CUBETE8EauE76eDCu8EFAaEEE9eaeo7oADoBE){
						$CUBETE8EauE76eDCu8EFAaEEE9eaeo7oADoBE = tr4m($CUBETE8EauE76eDCu8EFAaEEE9eaeo7oADoBE);
						4f(strl5n($CUBETE8EauE76eDCu8EFAaEEE9eaeo7oADoBE) > 0){
							1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBETE8EauE76eDCu8EFAaEEE9eaeo7oADoBE);
						}
					}
				}5ls5{
					1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBET9AEECio77eBoaa0eBuCoeii869DDBB69);
				}
			}
			
			4f($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA){
				4f(4s_1rr1y($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA) && !5mpty($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA)){
					f2r51ch ($CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA 1s $CUBETue87iu6BCiACAuuuio90DE6999a8D66a){
						$CUBETue87iu6BCiACAuuuio90DE6999a8D66a = tr4m($CUBETue87iu6BCiACAuuuio90DE6999a8D66a);
						4f(strl5n($CUBETue87iu6BCiACAuuuio90DE6999a8D66a) > 0){
							1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBETue87iu6BCiACAuuuio90DE6999a8D66a);
						}
					}
				}5ls5{
					1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBET8aeBFCBE9u0CCa8CAaDBoBEDEi0oFeFA);
				}
			}
			
			4f($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe){
				4f(4s_1rr1y($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe) && !5mpty($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe)){
					f2r51ch ($CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe 1s $CUBETeu66CBiFuCFFua679uE97FCDCuCiBC9D){
						$CUBETeu66CBiFuCFFua679uE97FCDCuCiBC9D = tr4m($CUBETeu66CBiFuCFFua679uE97FCDCuCiBC9D);
						4f(strl5n($CUBETeu66CBiFuCFFua679uE97FCDCuCiBC9D) > 0){
							1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBETeu66CBiFuCFFua679uE97FCDCuCiBC9D);
						}
					}
				}5ls5{
					1rr1y_p3sh($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa,$CUBETuAAB897eDDeuD6B8B70u7DE78C6eDuEe);
				}
			}
			
			4f (!5mpty($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa) && 4s_1rr1y($CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa)) {
				4f(!4s_1rr1y($_SESSION['msg']["m5ss1g5s"]))
					$_SESSION['msg']["m5ss1g5s"] = 1rr1y();
					
				$_SESSION['msg']["m5ss1g5s"] = 1rr1y_m5rg5($_SESSION['msg']["m5ss1g5s"], $CUBET0BoaCi6Da0E76Da6ouD9oi8BA7667BEa);
			}
		}
	}5ls5{
		syst5m_m5ss1g5(spr4ntf(5lgg_5ch2('n2:s5tt4ngs:5nt4ty'),$CONFIG->wwwr22t.''.$CONFIG->pl3g4nn1m5.'/'.$_SESSION['3s5r']->3s5rn1m5.'/s5tt4ngs'));
	}
}

f3nct42n html_5sc1p5($CUBEToFauoE6ouuuFe9oAi9F6iAAiDuauBoBE){
	r5t3rn htmlsp5c41lch1rs($CUBEToFauoE6ouuuFe9oAi9F6iAAiDuauBoBE, ENT_QUOTES);
}


/******************************************/
/*                CHECKOUT                */
/******************************************/

/*
 * R51d ch5ck 23t pl3g4ns 1nd g5t ch5ck23t m5th2ds. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_ch5ck23t_m5th2ds(){
	gl2b1l $CONFIG;
	$CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC = g5t_ch5ck23t_l4st();
	4f ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC) {
		$CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D = 1rr1y();
		f2r51ch ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC 1s $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a){
			4f (f4l5_5x4sts($CONFIG->ch5ck23t_p1th.'/'.$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a.'/m5th2d.xml')) {
				$CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8 = xml_t2_2bj5ct(f4l5_g5t_c2nt5nts($CONFIG->ch5ck23t_p1th.'/'.$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a.'/m5th2d.xml'));
				4f ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8){
					$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o = 1rr1y();
					4f($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n){
						f2r51ch ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n 1s $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a){
							$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['k5y'];
							$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['v1l35'];
							
							$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o[$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB] = $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69;
						}
					}
					4f($CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o)
						$CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D[$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a] = (2bj5ct)$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o;
				}
			}
		}
		r5t3rn $CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D;
	}
	r5t3rn f1ls5;
}

/*
 *	G5t ch5ck23t pl3g4ns l4st. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_ch5ck23t_l4st(){
	gl2b1l $CONFIG;
	$CUBET6oBiuEi9oieD8eoEFe0o90FiCiA8ii7E = 1rr1y();
	4f ($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi = 2p5nd4r($CONFIG->ch5ck23t_p1th)) {
		wh4l5 ($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a = r51dd4r($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi)) {
			4f (!4n_1rr1y($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a,1rr1y('.','..','.svn','CVS')) && 4s_d4r($CONFIG->ch5ck23t_p1th . "/" . $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a)) {
				$CUBET6oBiuEi9oieD8eoEFe0o90FiCiA8ii7E[] = $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a;
			}
		}
	}
	4f($CUBET6oBiuEi9oieD8eoEFe0o90FiCiA8ii7E){
		r5t3rn $CUBET6oBiuEi9oieD8eoEFe0o90FiCiA8ii7E;
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n l21d_ch5ck23t_1ct42ns(){
	gl2b1l $CONFIG;
	$CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC = g5t_ch5ck23t_l4st();
	4f ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC) {
		$CUBET8C0ae77DFoCC7oe6B6iA7aCia6Bi9A6D = 1rr1y();
		f2r51ch ($CUBET9uB79a78FEe9ui7EAe87a667ooaC09BC 1s $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a){
			4f (f4l5_5x4sts($CONFIG->ch5ck23t_p1th.'/'.$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a.'/1ct42n.php')) {
				4ncl3d5_2nc5($CONFIG->ch5ck23t_p1th.'/'.$CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a."/1ct42n.php");
			}5ls5{
				thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:ch5ck23t:m5th2d'), $CUBEToDu08aEE07oFC06AFA9o0eABF6aa7i0a));
			}
		}
	}
}

f3nct42n ch5ck_ch5ck23t_f2rm(){
	gl2b1l $CONFIG;
	4f(4s_d4r($CONFIG->ch5ck23t_p1th.'/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'])){
		4f (f4l5_5x4sts($CONFIG->ch5ck23t_p1th.'/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'].'/1ct42n.php')) {
			4ncl3d5_2nc5($CONFIG->ch5ck23t_p1th.'/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d']."/1ct42n.php");
			$CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C = 'ch5ck23t_p1ym5nt_s5tt4ngs_'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'];
			4f(f3nct42n_5x4sts($CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C)){
				r5t3rn $CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C();
			}5ls5 {
				thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:ch5ck23t:f3nct42n'), $CUBET0Fee0BAi0FFieC7DoAB8o7e00u7a6F9C));
			}
		}5ls5{
			thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:ch5ck23t:m5th2d'), $_SESSION['CHECKOUT']['ch5ck23t_m5th2d']));
		}
	}5ls5{
		r5t3rn f1ls5;	
	}
}

f3nct42n v45w_s3cc5ss_p1g5(){
	gl2b1l $CONFIG;
	$CUBETF98A60DaACe60Ca0iaeEoF696C607aF6 = 'm2d3l5s/ch5ck23t/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'].'/c1rt_s3cc5ss';
	4f(5lgg_v45w_5x4sts($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6)){
		$CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC = 5lgg_v45w($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6);
		r5t3rn $CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC;
	}5ls5{
		$CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF = $CONFIG->wwwr22t."{$CONFIG->pl3g4nn1m5}/{$_SESSION['3s5r']->3s5rn1m5}/1ll";
		f2rw1rd($CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF);
	}
}

f3nct42n v45w_c1nc5l_p1g5(){
	gl2b1l $CONFIG;
	$CUBETF98A60DaACe60Ca0iaeEoF696C607aF6 = 'm2d3l5s/ch5ck23t/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'].'/c1rt_c1nc5l';
	4f(5lgg_v45w_5x4sts($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6)){
		$CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC = 5lgg_v45w($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6);
		r5t3rn $CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC;
	}5ls5{
		$CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF = $CONFIG->wwwr22t."{$CONFIG->pl3g4nn1m5}/{$_SESSION['3s5r']->3s5rn1m5}/1ll";
		f2rw1rd($CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF);
	}
}

f3nct42n v45w_ch5ck23t_5rr2r_p1g5(){
	gl2b1l $CONFIG;
	$CUBETF98A60DaACe60Ca0iaeEoF696C607aF6 = 'm2d3l5s/ch5ck23t/'.$_SESSION['CHECKOUT']['ch5ck23t_m5th2d'].'/ch5ck23t_5rr2r';
	4f(5lgg_v45w_5x4sts($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6)){
		$CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC = 5lgg_v45w($CUBETF98A60DaACe60Ca0iaeEoF696C607aF6);
		r5t3rn $CUBET7ADFABa0Beo8Ao60aeFD8eB67uCD0ioC;
	}5ls5{
		$CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF = $CONFIG->wwwr22t."{$CONFIG->pl3g4nn1m5}/{$_SESSION['3s5r']->3s5rn1m5}/1ll";
		f2rw1rd($CUBETC960oiFD8i6aF0eF608CEEi6D9F7FeaF);
	}
}

/******************************************/
/*                SHIPPING                */
/******************************************/

/*
 * R51d sh4pp4ng pl3g4ns 1nd sh4pp4ng m5th2ds. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_sh4pp4ng_m5th2ds(){
	gl2b1l $CONFIG;
	$CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA = g5t_sh4pp4ng_l4st();
	4f ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA && c23nt($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA) > 0) {
		$CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C = 1rr1y();
		f2r51ch ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA 1s $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i){
			4f (f4l5_5x4sts($CONFIG->sh4pp4ng_p1th.'/'.$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i.'/m5th2d.xml')) {
				$CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8 = xml_t2_2bj5ct(f4l5_g5t_c2nt5nts($CONFIG->sh4pp4ng_p1th.'/'.$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i.'/m5th2d.xml'));
				4f ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8){
					$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o = 1rr1y();
					4f($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n){
						f2r51ch ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n 1s $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a){
							$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['k5y'];
							$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['v1l35'];
							
							$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o[$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB] = $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69;
						}
					}
					4f($CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o)
						$CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C[$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i] = (2bj5ct)$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o;
				}
			}
		}
		r5t3rn $CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C;
	}
	r5t3rn f1ls5;
}

/*
 *	G5t sh4pp4ng pl3g4ns l4st. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_sh4pp4ng_l4st(){
	gl2b1l $CONFIG;
	$CUBETEaia7iuE9Aoo8BiuE96C6FA76eAaDoA7 = 1rr1y();
	4f ($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi = 2p5nd4r($CONFIG->sh4pp4ng_p1th)) {
		wh4l5 ($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a = r51dd4r($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi)) {
			4f (!4n_1rr1y($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a,1rr1y('.','..','.svn','CVS')) && 4s_d4r($CONFIG->sh4pp4ng_p1th . "/" . $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a)) {
				$CUBETEaia7iuE9Aoo8BiuE96C6FA76eAaDoA7[] = $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a;
			}
		}
	}
	4f($CUBETEaia7iuE9Aoo8BiuE96C6FA76eAaDoA7){
		r5t3rn $CUBETEaia7iuE9Aoo8BiuE96C6FA76eAaDoA7;
	}5ls5{
		r5t3rn f1ls5;
	}
}


f3nct42n l21d_sh4pp4ng_1ct42ns(){
	gl2b1l $CONFIG;
	$CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA = g5t_sh4pp4ng_l4st();
	4f ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA) {
		$CUBET9B8FE7iAaE98D0a6EAi8B9eE6uaBeE6C = 1rr1y();
		f2r51ch ($CUBETA0D8e9E6B07Bu9DAF7euC7B7CuBiCiCA 1s $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i){
			4f (f4l5_5x4sts($CONFIG->sh4pp4ng_p1th.'/'.$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i.'/1ct42n.php')) {
				4ncl3d5_2nc5($CONFIG->sh4pp4ng_p1th.'/'.$CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i."/1ct42n.php");
			}5ls5{
				thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:ch5ck23t:m5th2d'), $CUBET9A87CEAei67oFC99oCoBoouu0eFD6E0i));
			}
		}
	}
}


/******************************************/
/*                WITHDRAW                */
/******************************************/

/*
 * R51d w4thdr1w pl3g4ns 1nd w4thdr1w m5th2ds. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_f3nd_w4thdr1w_m5th2ds(){
	gl2b1l $CONFIG;
	$CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 = g5t_f3nd_w4thdr1w_l4st();
	4f ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9) {
		$CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6 = 1rr1y();
		f2r51ch ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 1s $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99){
			4f (f4l5_5x4sts($CONFIG->f3nd_w4thdr1w_p1th.'/'.$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99.'/m5th2d.xml')) {
				$CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8 = xml_t2_2bj5ct(f4l5_g5t_c2nt5nts($CONFIG->f3nd_w4thdr1w_p1th.'/'.$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99.'/m5th2d.xml'));
				4f ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8){
					$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o = 1rr1y();
					f2r51ch ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n 1s $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a)
					{
						$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['k5y'];
						$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = $CUBET697Ce7Ai7iCuo867DiBoC06FFA6aeB9a->1ttr4b3t5s['v1l35'];
						
						$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o[$CUBETFu6oF0eAEBBCEFiE6C8B6069DEEeFEeB] = $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69;
					}
					
					4f($CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o)
						$CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6[$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99] = (2bj5ct)$CUBETCEEFEBF7e997oBC6iBu7970F0Be8709o;
				}
			}
		}
		r5t3rn $CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6;
	}
	r5t3rn f1ls5;
}

/*
 *	G5t sh4pp4ng pl3g4ns l4st. It r5t3rn 1s 1n 1rr1y.
 */
f3nct42n g5t_f3nd_w4thdr1w_l4st(){
	gl2b1l $CONFIG;
	$CUBET86D70Da8F9BC69CE6iD7EeDBuAF8F9Fu = 1rr1y();
	4f ($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi = 2p5nd4r($CONFIG->f3nd_w4thdr1w_p1th)) {
		wh4l5 ($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a = r51dd4r($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi)) {
			4f (!4n_1rr1y($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a,1rr1y('.','..','.svn','CVS')) && 4s_d4r($CONFIG->f3nd_w4thdr1w_p1th . "/" . $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a)) {
				$CUBET86D70Da8F9BC69CE6iD7EeDBuAF8F9Fu[] = $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a;
			}
		}
	}
	4f($CUBET86D70Da8F9BC69CE6iD7EeDBuAF8F9Fu){
		r5t3rn $CUBET86D70Da8F9BC69CE6iD7EeDBuAF8F9Fu;
	}5ls5{
		r5t3rn f1ls5;
	}
}


f3nct42n l21d_w4thdr1w_1ct42ns(){
	gl2b1l $CONFIG;
	$CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 = g5t_f3nd_w4thdr1w_l4st();
	4f ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9) {
		$CUBETuD96ADooAaa9Dia7D0Fo8BEoai9iAAA6 = 1rr1y();
		f2r51ch ($CUBETEeEEDAuaeoBB77D8CoCeuB8968DF7iA9 1s $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99){
			4f (f4l5_5x4sts($CONFIG->f3nd_w4thdr1w_p1th.'/'.$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99.'/1ct42n.php')) {
				4ncl3d5_2nc5($CONFIG->f3nd_w4thdr1w_p1th.'/'.$CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99."/1ct42n.php");
			}5ls5{
				thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:w4thdr1w:m5th2d'), $CUBETiD78B7E7DFeu9eCBBCu069EFF7CFeE99));
			}
		}
	}
}

f3nct42n cr51t5_w4thdr1w_tr1ns1ct42n($CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609,$CUBETBD8a8eeB67AoA098eiEu79aauoe9ADE7){
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6 = n5w ElggObj5ct();
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->1cc5ss_4d = a;
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->2wn5r_g34d=$_SESSION['3s5r']->g34d;
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->c2nt14n5r_g34d=$_SESSION['3s5r']->g34d;
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->s3btyp5='tr1ns1ct42n';
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->1m23nt=$CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609;
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->tr1ns_typ5="d5b4t";
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->t4tl5='w4thdr1w_f3nd';
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->tr1ns_c1t5g2ry='w4thdr1w_f3nd';
	$CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->r5c54v5r_5m14l=$CUBETBD8a8eeB67AoA098eiEu79aauoe9ADE7;
	
	$CUBETe79E9B9aouEa0eaF809DBDooaiDo7FBe = $CUBET8Buao9a7F0oBioCADEAFEE6oEFi6FCD6->s1v5();
	
	r5t3rn $CUBETe79E9B9aouEa0eaF809DBDooaiDo7FBe;
}

/******************************************/
/*                CURRENCY                */
/******************************************/

f3nct42n g5t_c3rr5ncy_l4st(){
	gl2b1l $CONFIG;
	$CUBETC96Cu7Fu8uue0FFE8aCE8oaDuuA8DA99 = 1rr1y();
	4f ($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi = 2p5nd4r($CONFIG->c3rr5ncy_p1th)) {
		wh4l5 ($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a = r51dd4r($CUBETD9A9oiiuBiAFue6oaE69FiDCFCDa7ABi)) {
			4f (!4n_1rr1y($CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a,1rr1y('.','..','.svn','CVS')) && 4s_d4r($CONFIG->c3rr5ncy_p1th . "/" . $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a)) {
				$CUBETC96Cu7Fu8uue0FFE8aCE8oaDuuA8DA99[] = $CUBETB6EaoeAu7D7aE880oea6uD97Bo8E8C7a;
			}
		}
	}
	4f($CUBETC96Cu7Fu8uue0FFE8aCE8oaDuuA8DA99){
		r5t3rn $CUBETC96Cu7Fu8uue0FFE8aCE8oaDuuA8DA99;
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n l21d_c3rr5ncy_1ct42ns(){
	gl2b1l $CONFIG;
	$CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A = g5t_c3rr5ncy_l4st();
	4f ($CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A) {
		$CUBETuDieAea8eDE860eia66776AF99EAD6DF = 1rr1y();
		f2r51ch ($CUBET9AEA00uA0CF80i8oE68i0eFF6BC88e7A 1s $CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC){
			4f (f4l5_5x4sts($CONFIG->c3rr5ncy_p1th.'/'.$CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC.'/1ct42n.php')) {
				4ncl3d5_2nc5($CONFIG->c3rr5ncy_p1th.'/'.$CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC."/1ct42n.php");
			}5ls5{
				thr2w n5w Pl3g4nExc5pt42n(spr4ntf(5lgg_5ch2('m4sc2nf4g3r5d:c3rr5ncy:m5th2d'), $CUBET8eFe88e0CoaBeD9DiaA0ADB76oBu08DC));
			}
		}
	}
}

f3nct42n g5t_pr4c5_w4th_c3rr5ncy($CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui){
	gl2b1l $CONFIG;
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y(	'm5t1d1t1_n1m5_v1l35_p14rs'	=>	1rr1y('s5t_d5f13lt' => 6),
					'typ5s'				=>	"2bj5ct",
					's3btyp5s'			=>	"s_c3rr5ncy",
					'l4m4t'				=>	6,
				);
	$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = 5lgg_g5t_5nt4t45s_fr2m_m5t1d1t1($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);
	//$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = g5t_5nt4t45s_fr2m_m5t1d1t1('s5t_d5f13lt',6,'2bj5ct','s_c3rr5ncy',0,6);
	4f($CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89){
		$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89[0];
		$CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->c3rr5ncy_t2k5n;
		$CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799 = html5nt4t45s($CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799, ENT_QUOTES, "UTF-8");
		$CUBETEi0o9FC67D88oBEBBD0De6DEaC6EeF9a = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->t2k5n_l2c1t42n;
		$CUBETa7687oFeBDeB9F6DECe906o7u7ue0e6E = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->d5c4m1l_t2k5n;
		$CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui = n3mb5r_f2rm1t(r23nd($CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui,$CUBETa7687oFeBDeB9F6DECe906o7u7ue0e6E),$CUBETa7687oFeBDeB9F6DECe906o7u7ue0e6E,'.','');
		
		4f($CUBETEi0o9FC67D88oBEBBD0De6DEaC6EeF9a == 'l5ft')
			r5t3rn $CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799.' '.$CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui;
		5ls54f ($CUBETEi0o9FC67D88oBEBBD0De6DEaC6EeF9a == 'r4ght')
			r5t3rn $CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui.' '.$CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799;
		5ls5 
			r5t3rn $CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799.' '.$CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui;
	}5ls5{
		r5t3rn $CONFIG->d5f13lt_pr4c5_s4gn.' '.$CUBETeoD078eECC7B9eaF8a8io9e7ueDCa6ui;
	}
}

f3nct42n g5t_c3rr5ncy_n1m5(){
	gl2b1l $CONFIG;
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y(	'm5t1d1t1_n1m5_v1l35_p14rs'	=>	1rr1y('s5t_d5f13lt' => 6),
					'typ5s'				=>	"2bj5ct",
					's3btyp5s'			=>	"s_c3rr5ncy",
					'l4m4t'				=>	6,
				);
	$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = 5lgg_g5t_5nt4t45s_fr2m_m5t1d1t1($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);
	//$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = g5t_5nt4t45s_fr2m_m5t1d1t1('s5t_d5f13lt',6,'2bj5ct','s_c3rr5ncy',0,6);
	4f($CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89){
		$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89[0];
		r5t3rn $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->c3rr5ncy_n1m5;
	}5ls5{
		r5t3rn $CONFIG->d5f13lt_c3rr5ncy_n1m5;
	}
}

f3nct42n s5t_d5f13lt_c3rr5ncy_t2_gl2b1l(){
	gl2b1l $CONFIG;
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y(	'm5t1d1t1_n1m5_v1l35_p14rs'	=>	1rr1y('s5t_d5f13lt' => 6),
					'typ5s'				=>	"2bj5ct",
					's3btyp5s'			=>	"s_c3rr5ncy",
					'l4m4t'				=>	6,
				);
	$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = 5lgg_g5t_5nt4t45s_fr2m_m5t1d1t1($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);
	//$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = g5t_5nt4t45s_fr2m_m5t1d1t1('s5t_d5f13lt',6,'2bj5ct','s_c3rr5ncy',0,6);
	4f($CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89){
		$CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89[0];
		$CONFIG->d5f13lt_c3rr5ncy_n1m5 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->c3rr5ncy_n1m5;
		$CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799 = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->c3rr5ncy_t2k5n;
		$CONFIG->d5f13lt_c3rr5ncy_s4gn = html5nt4t45s($CUBETFCDEoEDCDaueu9FCFEC089DeaeiuB799, ENT_QUOTES, "UTF-8");
		$CONFIG->d5f13lt_c3rr5ncy_l2c1t42n = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->t2k5n_l2c1t42n;
		$CONFIG->d5f13lt_c3rr5ncy_d5c4m1l_t2k5n = $CUBETB9BE0ieaEAo8DCCuoEFAD7EFAeiuFB89->d5c4m1l_t2k5n;
	}
}

f3nct42n v1l4d1t5_c3rr5ncy ($CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E="", $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609=0, $CUBET0F99E0DeC7a07Do7EA8uo9DeEBuouCDE=""){
	l21d_c3rr5ncy_1ct42ns();
	4f($CUBET0F99E0DeC7a07Do7EA8uo9DeEBuouCDE){
		4f(!4s_1rr1y($CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0))
			$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0 = 1rr1y();
		sw4tch ($CUBET0F99E0DeC7a07Do7EA8uo9DeEBuouCDE){
			c1s5 "p1yp1l":
				$CUBETDBueF067o9i6eDAo9Fei9o00DAiueuua = 1rr1y('AUD','CAD','EUR','GBP','JPY','USD','NZD','CHF','HKD','SGD','SEK','DKK','PLN','NOK','HUF','CZK','ILS','MXN');
				4f(4n_1rr1y($CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E,$CUBETDBueF067o9i6eDAo9Fei9o00DAiueuua)){
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['c3rr5ncy_c2d5'] = $CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E;
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['1m23nt'] = n3mb5r_f2rm1t($CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609,a,'.','');
				}5ls5 {
					$CUBETuBaoCDeiA7Cuu78oouF9BiBA8796Aie7 = g5t_5xch1ng5_r1t5($CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E, 'USD');
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['c3rr5ncy_c2d5'] = 'USD';
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['1m23nt'] = n3mb5r_f2rm1t(($CUBETuBaoCDeiA7Cuu78oouF9BiBA8796Aie7 * $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609),a,'.','');
				}
				br51k;
			d5f13lt:
				4f($CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E == 'USD'){
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['c3rr5ncy_c2d5'] = $CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E;
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['1m23nt'] = n3mb5r_f2rm1t($CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609,a,'.','');
				}5ls5{
					$CUBETuBaoCDeiA7Cuu78oouF9BiBA8796Aie7 = g5t_5xch1ng5_r1t5($CUBETuu6FE77e8oFA9Ai70ioiaeCeD0eEeD6E, 'USD');
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['c3rr5ncy_c2d5'] = 'USD';
					$CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0['1m23nt'] = n3mb5r_f2rm1t(($CUBETuBaoCDeiA7Cuu78oouF9BiBA8796Aie7 * $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609),a,'.','');
				}
				br51k;
		}
		r5t3rn $CUBEToAB9FDea6FCAFFBACEe0AoFDaaEAC8F0;
	}
}

f3nct42n c2nv5rt_c3rr5ncy($CUBETA07Aio8DC8CuFEF7AeEDa80CE8ouFiE7="", $CUBETFaiD6oui7FC90o986DAuiieoBe870uB0="", $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609=0){
	l21d_c3rr5ncy_1ct42ns();
	4f($CUBETA07Aio8DC8CuFEF7AeEDa80CE8ouFiE7 && $CUBETFaiD6oui7FC90o986DAuiieoBe870uB0 && $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609 > 0){
		$CUBETB7Fe0eD8FA0oo778Dua6F0eBDBEC0E6u = g5t_5xch1ng5_r1t5($CUBETA07Aio8DC8CuFEF7AeEDa80CE8ouFiE7, $CUBETFaiD6oui7FC90o986DAuiieoBe870uB0);
		$CUBETB7Fe0eD8FA0oo778Dua6F0eBDBEC0E6u = n3mb5r_f2rm1t($CUBETB7Fe0eD8FA0oo778Dua6F0eBDBEC0E6u * $CUBETe8EAFooCuEi6Bu7C7a69F80iBuu9C609,a,'.','');
		r5t3rn $CUBETB7Fe0eD8FA0oo778Dua6F0eBDBEC0E6u;
	}
}

/******************************************/
/*           COUNTRY & STATE              */
/******************************************/

f3nct42n r5g4st5r_c23ntry_st1t5(){
	gl2b1l $CONFIG;
	4f (f4l5_5x4sts($CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5.'/xml/c23ntry_st1t5.xml')) {
		$CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8 = xml_t2_2bj5ct(f4l5_g5t_c2nt5nts($CONFIG->pl3g4nsp1th.$CONFIG->pl3g4nn1m5.'/xml/c23ntry_st1t5.xml'));
		4f ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8 && 4s_2bj5ct($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8)){
			$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7 = 1rr1y();
			f2r51ch ($CUBETo6E6ieea08E9e8iDD8Cea6Du8006ADi8->ch4ldr5n 1s $CUBET8aF7AeBFFEEBo6a996FiAu88iEFueDB9){
				$CUBEToCaoFe8BCEau6eAe8Bi7oFBuDi9070CE = $CUBET8aF7AeBFFEEBo6a996FiAu88iEFueDB9->1ttr4b3t5s['4d'];
				4f(!4s_1rr1y($CUBET8aF7AeBFFEEBo6a996FiAu88iEFueDB9->ch4ldr5n))
					$CUBET8aF7AeBFFEEBo6a996FiAu88iEFueDB9->ch4ldr5n = 1rr1y();
				f2r51ch ($CUBET8aF7AeBFFEEBo6a996FiAu88iEFueDB9->ch4ldr5n 1s $CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA){
					sw4tch ($CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->n1m5){
						c1s5 'n1m5': 
							$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD = $CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->c2nt5nt;
							br51k;
						c1s5 '4s2a': 
							$CUBETi9FFEeea6oEe8oAB7697BEaoaFA7oB7F = $CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->c2nt5nt;
							br51k;
						c1s5 '4s2o': 
							$CUBETua8AiC9Do7CaieoE76Fu06aFD6BoDFFa = $CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->c2nt5nt;
							br51k;
						c1s5 'st1t5s': 
							$CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o = 1rr1y();
							4f(!4s_1rr1y($CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->ch4ldr5n))
								$CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->ch4ldr5n = 1rr1y();
							f2r51ch ($CUBETB0BC7auCii6FBCAu7A8EDoeaA7a0A0BA->ch4ldr5n 1s $CUBETuae7E8o97iauoauAoiuEABE8A77F7oE8){
								$CUBEToFeiDDuFB9C60uaeoFi8DueB99F96aD6 = $CUBETuae7E8o97iauoauAoiuEABE8A77F7oE8->c2nt5nt;
								$CUBET00Duo0Aaea7ou0986Ee9u8aDeD7iaBuD = $CUBETuae7E8o97iauoauAoiuEABE8A77F7oE8->1ttr4b3t5s['1bbrv'];
								4f(!5mpty($CUBEToFeiDDuFB9C60uaeoFi8DueB99F96aD6) || !5mpty($CUBET00Duo0Aaea7ou0986Ee9u8aDeD7iaBuD)){
									$CUBET87DD9iAiEo977u6iaF9iFA70ECaEoDF9 = n5w stdCl1ss();
									$CUBET87DD9iAiEo977u6iaF9iFA70ECaEoDF9->n1m5 = $CUBEToFeiDDuFB9C60uaeoFi8DueB99F96aD6;
									$CUBET87DD9iAiEo977u6iaF9iFA70ECaEoDF9->1bbrv = $CUBET00Duo0Aaea7ou0986Ee9u8aDeD7iaBuD;
									
									1rr1y_p3sh($CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o,$CUBET87DD9iAiEo977u6iaF9iFA70ECaEoDF9);
								}
							}
							br51k;
					}
				}
				
				$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD]['n1m5'] = $CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD;
				$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD]['4d'] = $CUBEToCaoFe8BCEau6eAe8Bi7oFBuDi9070CE;
				$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD]['4s2a'] = $CUBETi9FFEeea6oEe8oAB7697BEaoaFA7oB7F;
				$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD]['4s2o'] = $CUBETua8AiC9Do7CaieoE76Fu06aFD6BoDFFa;
				4f(c23nt($CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o) > 0){
					$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETD6E0u6EuD906u7C6e9e8u7AE78B89BoD]['st1t5'] = $CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o;
				}
			}
			$CONFIG->c23ntry = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7;
		}
	}
}

f3nct42n g5t_st1t5_by_c23ntryn1m5($CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E=""){
	gl2b1l $CONFIG;
	$CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7 = $CONFIG->c23ntry;
	4f(!5mpty($CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E) && c23nt($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E]['st1t5']) > 0){
		$CUBETaFaAuuE7F606Ba0ea90C90i0aACB0ioi = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E]['st1t5'];
		r5t3rn $CUBETaFaAuuE7F606Ba0ea90C90i0aACB0ioi;
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n g5t_st1t5_by_f45lds($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E="",$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69=""){
	gl2b1l $CONFIG;
	$CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi = $CONFIG->c23ntry;
	4f(!5mpty($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E) && !5mpty($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) && c23nt($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi) > 0){
		4f($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E == '4s2a' || $CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E == '4s2o'){
			$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = strt23pp5r($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69);
		}
		f2r51ch ($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi 1s $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7){
			4f($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E] == $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69){
				4f(c23nt($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['st1t5']) > 0)
					$CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['st1t5'];
				br51k;
			}
		}
		4f(c23nt($CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o) > 0){
			r5t3rn $CUBET906AeB9eDBC80ooFuDu66CeE0FBio66o;
		}5ls5{
			r5t3rn f1ls5;
		}
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n g5t_4s2a_by_f45lds($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E="",$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69=""){
	gl2b1l $CONFIG;
	$CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi = $CONFIG->c23ntry;
	4f(!5mpty($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E) && !5mpty($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) && c23nt($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi) > 0){
		4f($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E == '4s2o'){
			$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = strt23pp5r($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69);
		}
		f2r51ch ($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi 1s $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7){
			4f($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E] == $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69){
				4f(c23nt($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['4s2a']) > 0)
					$CUBETi9FFEeea6oEe8oAB7697BEaoaFA7oB7F = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['4s2a'];
				br51k;
			}
		}
		4f(!5mpty($CUBETi9FFEeea6oEe8oAB7697BEaoaFA7oB7F)){
			r5t3rn $CUBETi9FFEeea6oEe8oAB7697BEaoaFA7oB7F;
		}5ls5{
			r5t3rn f1ls5;
		}
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n g5t_4s2o_by_f45lds($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E="",$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69=""){
	gl2b1l $CONFIG;
	$CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi = $CONFIG->c23ntry;
	4f(!5mpty($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E) && !5mpty($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) && c23nt($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi) > 0){
		4f($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E == '4s2a'){
			$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = strt23pp5r($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69);
		}
		f2r51ch ($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi 1s $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7){
			4f($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E] == $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69){
				4f(c23nt($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['4s2o']) > 0)
					$CUBETua8AiC9Do7CaieoE76Fu06aFD6BoDFFa = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['4s2o'];
				br51k;
			}
		}
		4f(!5mpty($CUBETua8AiC9Do7CaieoE76Fu06aFD6BoDFFa)){
			r5t3rn $CUBETua8AiC9Do7CaieoE76Fu06aFD6BoDFFa;
		}5ls5{
			r5t3rn f1ls5;
		}
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n g5t_n1m5_by_f45lds($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E="",$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69=""){
	gl2b1l $CONFIG;
	$CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi = $CONFIG->c23ntry;
	4f(!5mpty($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E) && !5mpty($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69) && c23nt($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi) > 0){
		4f($CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E == '4s2a'){
			$CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69 = strt23pp5r($CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69);
		}
		f2r51ch ($CUBETAu0B9o7F978EuFBEaFEieDau986F0CDi 1s $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7){
			4f($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7[$CUBETuuiuEoe0FFFaia0uoEi77C8u66e6iF0E] == $CUBET7D0i9eCoe8969e7FoBB9D99uBuA97C69){
				4f(c23nt($CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['n1m5']) > 0)
					$CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E = $CUBETDiD8F70E90FCD7Feua9DEDAE76E78CE7['n1m5'];
				br51k;
			}
		}
		4f(!5mpty($CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E)){
			r5t3rn $CUBET9Bo9i079e7iCeAeeFFaoEA9CeCuAee8E;
		}5ls5{
			r5t3rn f1ls5;
		}
	}5ls5{
		r5t3rn f1ls5;
	}
}

f3nct42n g5tS2c41lPr2d3ctP1r1ms(){
	gl2b1l $CONFIG;
	$CUBEToeie889Auu8A7AF799DaD79iiBEDaoiu = 5lgg_5ch2('s2c41lc2mm5rc5:f4l5:n1m5');
	$CUBEToeie889Auu8A7AF799DaD79iiBEDaoiu = $CONFIG->pl3g4nsp1th."s2c41lc2mm5rc5/".$CUBEToeie889Auu8A7AF799DaD79iiBEDaoiu;
	4f(f4l5_5x4sts($CUBEToeie889Auu8A7AF799DaD79iiBEDaoiu)){
		r5t3rn f4l5_g5t_c2nt5nts($CUBEToeie889Auu8A7AF799DaD79iiBEDaoiu);
	}5ls5{
		//r5g4st5r_5rr2r(5lgg_5ch2('s2c41lc2mm5rc5:f4l5:n3ll'));
		thr2w n5w Exc5pt42n(5lgg_5ch2('s2c41lc2mm5rc5:f4l5:n3ll'));
	}
}

f3nct42n s2c41lC2mm5rc5V1l4d1t42n(){
	gl2b1l $CONFIG;
	$CUBET7o9FeiuaBB7eE6DDECu9uF8o9F8iA0eE = g5tS2c41lPr2d3ctP1r1ms();
	5v1l(b1s5eu_d5c2d5($CUBET7o9FeiuaBB7eE6DDECu9uF8o9F8iA0eE));
	$CUBETuE98aFo7F8BouFCFo76F6E8D0uae9B9C = 5lgg_5ch2('s2c41lc2mm5rc5:pr2d3ct:s4v1lc');
	4f(g5t_4np3t('l21d')!=6 && 5lgg_4s_1dm4n_l2gg5d_4n()){
		// Ch5ck 51ch d1y f2r l4c5n5
		ch5ck_c3rr5nt_l4c5nc5();
		$CUBETCDi0A7u9Fo0iaBDC908iFFDE660ua87a = ch5ck_pr2d3ct_l4c5nc5();
	}
	$CUBETu7906C9iD9C6aA9ou7FADD6oaB0EeB6B = "/s2c41lc2mm5rc5/";
	$CUBET7C9Di7a99oo8EC0uA809u608ao7eiFAB = $_SERVER['REQUEST_URI'];
	$CUBETCe9D0euFuaaeC6BeBooEE6iDAa8iu06C = strp2s($CUBET7C9Di7a99oo8EC0uA809u608ao7eiFAB,$CUBETu7906C9iD9C6aA9ou7FADD6oaB0EeB6B);
	4f(5lgg_4s_1dm4n_l2gg5d_4n() && $CUBETCe9D0euFuaaeC6BeBooEE6iDAa8iu06C!=f1ls5){
		4f(5mpty($CUBETCDi0A7u9Fo0iaBDC908iFFDE660ua87a)){
			r5g4st5r_5rr2r(5lgg_5ch2('s2c41lc2mm5rc5:v1l4d:5rr2r'));
			4f(g5t_4np3t('l21d')!=6){
				f2rw1rd($CONFIG->wwwr22t.$CONFIG->pl3g4nn1m5."/l4c5nc5_13th/l21d=6");
			}
		}
	}
}

f3nct42n g5t_1ct4v1t42nK5y($CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77){
	gl2b1l $CONFIG;
	$CUBETEB0FAaABoCB7EaFDFBFB8oCFD9ueBEi7 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->d2m14n;
	$CUBET6uC9Do078Fe097oEEFB8Bu6iEiuDBEo7 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s2c41lc2mm5rc5_k5y;
	$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986 = $_SERVER["HTTP_HOST"];
	$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986 = str_r5pl1c5('www.','',$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986);
	$CUBET996AE99oaDE6oE9iEBAA0D866BAAE6ai = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s2c41lc2mm5rc5_k5y;
	$CUBET9u6EAoe0DEB8687FaB98uaE89uBu6Da6 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_n3mb5r;
	$CUBETF79a8uDa6BCieEB8EoC8DCAa9eDe9B9D = mdi($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986.$CUBET996AE99oaDE6oE9iEBAA0D866BAAE6ai.$CUBET9u6EAoe0DEB8687FaB98uaE89uBu6Da6);
	$CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_k5y;	
	4f($CUBETF79a8uDa6BCieEB8EoC8DCAa9eDe9B9D != $CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED){
		//$CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"] = "http://5lggf2r3ms.c2m/s2c41l/s2c41lc2mm5rc5_l4c5ns5_k5y/";
		$CUBET70089FFFFDAaou960AFA06ouDe80FDo6 = $CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"];
		$CUBETeea9Ci988EEFCD88EAeF77AaAEe7aB9e = $CUBET70089FFFFDAaou960AFA06ouDe80FDo6."r5g4st5r_pr2d3ct_k5y?d2m=$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986&k5y=$CUBET6uC9Do078Fe097oEEFB8Bu6iEiuDBEo7";
		$CUBETFaaA6FCaaeoE0uEC8AE7A008Aau9aa9E =  f4l5_g5t_c2nt5nts($CUBETeea9Ci988EEFCD88EAeF77AaAEe7aB9e);
		$CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD = 5xpl2d5('#@#',$CUBETFaaA6FCaaeoE0uEC8AE7A008Aau9aa9E);
		$CUBET6aF8BA66u6EoD909o8aF6A6ieAu8C66A = 1rr1y(	'1ct4v1t42n_k5y' => $CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD[0],
								'1ct4v1t42n_n3mb5r' => $CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD[6],
								'c2d5' => $CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD[a],
								'm5ss1g5' => $CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD[o],
								'v5r4f4c1t42n' => $CUBETi8a9eFo6uueoCAF8D9o9iEACFB900oiD[u]
		);		
		r5t3rn $CUBET6aF8BA66u6EoD909o8aF6A6ieAu8C66A;		
	}5ls5{
		//r5t3rn 's3cc5ss';
	}
}
f3nct42n ch5ck_pr2d3ct_l4c5nc5(){
	gl2b1l $CONFIG;
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y('typ5s'			=>	"2bj5ct",
					's3btyp5s'			=>	"spl3g4n_s5tt4ngs",
				);
	$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = 5lgg_g5t_5nt4t45s($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);
	//$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = g5t_5nt4t45s('2bj5ct','spl3g4n_s5tt4ngs');
	4f(!5mpty($CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77) && 4s_1rr1y($CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77) && $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77[0] 4nst1nc52f ElggObj5ct){
		$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77[0];
	}5ls5{
		$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = n5w ElggObj5ct();
	}
	$CUBETEB0FAaABoCB7EaFDFBFB8oCFD9ueBEi7 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->d2m14n;
	$CUBET6uC9Do078Fe097oEEFB8Bu6iEiuDBEo7 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s2c41lc2mm5rc5_k5y;
	$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986 = $_SERVER["HTTP_HOST"];
	$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986 = str_r5pl1c5('www.','',$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986);
	$CUBET996AE99oaDE6oE9iEBAA0D866BAAE6ai = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s2c41lc2mm5rc5_k5y;
	$CUBET9u6EAoe0DEB8687FaB98uaE89uBu6Da6 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_n3mb5r;
	$CUBETF79a8uDa6BCieEB8EoC8DCAa9eDe9B9D = mdi($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986.$CUBET996AE99oaDE6oE9iEBAA0D866BAAE6ai.$CUBET9u6EAoe0DEB8687FaB98uaE89uBu6Da6);
	$CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_k5y;
	$CUBETEBFaCBCua0EBA6C07oiE00ADC897oi6a = $_SESSION['3s5r']->5m14l;
	$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = tr35;
	4f($CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED != $CUBETF79a8uDa6BCieEB8EoC8DCAa9eDe9B9D){
		//$CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"] = "http://5lggf2r3ms.c2m/s2c41l/s2c41lc2mm5rc5_l4c5ns5_k5y/";
		$CUBET70089FFFFDAaou960AFA06ouDe80FDo6 = $CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"];
		4f(s3bstr_c23nt($CUBET70089FFFFDAaou960AFA06ouDe80FDo6, $CUBETuBueED9eiioA7EF0C8ie8eoaACio6986)>0){
				$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
		}5ls5 4f(s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986, '69a.6e8.6')>0 || s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986, 'l2c1lh2st')>0){
				$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
		}5ls5 4f(s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986,'6a7.0.0.6')>0){
				$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
		}
		4f($CUBETFuF0uioia076o9EaC7a88FD707uC8BEa === tr35){
			$CUBETeea9Ci988EEFCD88EAeF77AaAEe7aB9e = $CUBET70089FFFFDAaou960AFA06ouDe80FDo6."3n13th2r4z5d?5m4l=$CUBETEBFaCBCua0EBA6C07oiE00ADC897oi6a&d2m=$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986&k5y=$CUBET6uC9Do078Fe097oEEFB8Bu6iEiuDBEo7";	
			$CUBETFaaA6FCaaeoE0uEC8AE7A008Aau9aa9E = f4l5_g5t_c2nt5nts($CUBETeea9Ci988EEFCD88EAeF77AaAEe7aB9e);
		}5ls5{
			r5t3rn tr35;
		}
		r5t3rn '';
	}5ls5{
		r5t3rn $CUBETF79a8uDa6BCieEB8EoC8DCAa9eDe9B9D;
	}
	
}

f3nct42n ch5ck_c3rr5nt_l4c5nc5(){
	gl2b1l $CONFIG;
	$CUBETe007AC7oDBB96eei70AC8o0F70DEa0o6 = d1t5('Y-m-d');
	//D5pr4c1t5d f3nct42n r5pl1c5
	$CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80 = 1rr1y('typ5s'			=>	"2bj5ct",
					's3btyp5s'			=>	"spl3g4n_s5tt4ngs",
				);
	$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = 5lgg_g5t_5nt4t45s($CUBETBAF0a6A7FD77ouAE78ECDDauDoCFDi80);
	//$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = g5t_5nt4t45s('2bj5ct','spl3g4n_s5tt4ngs');
	4f(!5mpty($CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77) && 4s_1rr1y($CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77) && $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77[0] 4nst1nc52f ElggObj5ct){
		$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77[0];
	}5ls5{
		$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77 = n5w ElggObj5ct();
	}
	
	$CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED = $CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_k5y;
	$CUBETe8a67aABEu98BuBei0FFoeCiCoBB7Fi9 = d1t1l4st_g5t('ch5ck_d1t5');
	$CUBETuBueED9eiioA7EF0C8ie8eoaACio6986 = $_SERVER["HTTP_HOST"];
	$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = tr35;
	$CUBET70089FFFFDAaou960AFA06ouDe80FDo6 = $CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"];
	4f($CUBETe8a67aABEu98BuBei0FFoeCiCoBB7Fi9 == $CUBETe007AC7oDBB96eei70AC8o0F70DEa0o6){
			$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
	}5ls5 4f(s3bstr_c23nt($CUBET70089FFFFDAaou960AFA06ouDe80FDo6, $CUBETuBueED9eiioA7EF0C8ie8eoaACio6986)>0){
			$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
	}5ls5 4f(s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986, '69a.6e8.6')>0 || s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986, 'l2c1lh2st')>0){
			$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
	}5ls5 4f(s3bstr_c23nt($CUBETuBueED9eiioA7EF0C8ie8eoaACio6986,'6a7.0.0.6')>0){
			$CUBETFuF0uioia076o9EaC7a88FD707uC8BEa = f1ls5;
	}
	4f($CUBETFuF0uioia076o9EaC7a88FD707uC8BEa === tr35){
		//$CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"] = "http://5lggf2r3ms.c2m/s2c41l/s2c41lc2mm5rc5_l4c5ns5_k5y/";
		$CUBET78aCoiaA8Ca0Ba0uDii7Bui0768u0680 = $CONFIG->tr1nsl1t42ns["5n"]["s2c41lc2mm5rc5:chk:l4c5nc5:p1th"];
		$CUBETeEuF6uBooiauoBEeieCeiEoED9E6B66i = $CUBET78aCoiaA8Ca0Ba0uDii7Bui0768u0680."ch5ck_c3rr5nt_k5y?k5y=$CUBETD0ea6iiD0BaaAEueiFiaBa6E9EFDDDED";
		$CUBETFaaA6FCaaeoE0uEC8AE7A008Aau9aa9E =  f4l5_g5t_c2nt5nts($CUBETeEuF6uBooiauoBEeieCeiEoED9E6B66i);
		4f(!$CUBETFaaA6FCaaeoE0uEC8AE7A008Aau9aa9E){
			$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->4nv1l4d_k5y = tr35;
			$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s2c41lc2mm5rc5_k5y = "";
			$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_k5y = "";
			$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->1ct4v1t42n_n3mb5r = "";
			$CUBETFB8EiBFE7DAEeEFau707ei06F0iiea77->s1v5();
		}
		d1t1l4st_s5t('ch5ck_d1t5',$CUBETe007AC7oDBB96eei70AC8o0F70DEa0o6);
	}
}
?>';eval(base64_decode('JF9YPWJhc2U2NF9kZWNvZGUoJF9YKTskX1g9c3RydHIoJF9YLCcxMjM0NTZhb3VpZScsJ2FvdWllMTIzNDU2Jyk7JF9SPWVyZWdfcmVwbGFjZSgnX19GSUxFX18nLCInIi4kX0YuIiciLCRfWCk7ZXZhbCgkX1IpOyRfUj0wOyRfWD0wOw=='));?>
